(function($){
  // Settings
  var repeat = localStorage.repeat || 0,
      shuffle = localStorage.shuffle || 'false',
      continous = localStorage.continous || 'false',
      autoplay = localStorage.autoplay || window.autoplay || 'false',
      playlist = window.playlist,
      debug = false;


  // Load playlist
  for (var i=0; i<playlist.length; i++){
      var item = playlist[i];
      $('#playlist').append('<li>'+item.artist+' - '+item.title+'</li>');
  }

  var time = new Date(),
      currentTrack = shuffle === 'true' ? time.getTime() % playlist.length : 0,
      trigger = false,
      audio, timeout, isPlaying, playCounts;

  var play = function(){
      wavesurfer.play(wavesurfer.getCurrentTime())// audio.play();
      if(debug)console.log('play');
      $('.playback').addClass('playing');
      timeout = setInterval(updateProgress, 500);
      isPlaying = true;
      $('.audio').removeClass('state-stop');
      $('.audio').addClass('state-playing');

  }

  var pause = function(){
      wavesurfer.playPause()/// audio.pause();
      if(debug)console.log('pause');
      $('.playback').removeClass('playing');
      clearInterval(updateProgress);
      isPlaying = false;
      $('.audio').addClass('state-stop');
      $('.audio').removeClass('state-playing');
  }

  // Update progress
  var setProgress = function(value){
      var currentSec = parseInt(value%60) < 10 ? '0' + parseInt(value%60) : parseInt(value%60),
          ratio = value / wavesurfer.getDuration() * 100;

      $('.timing .duration').html(parseInt(value/60)+':'+currentSec);
      $('.play-bar').css('width', ratio + '%');
      $('#waveform wave wave').css('width', ratio + '%');
      $('.pprogress .slider a').css('left', ratio + '%');
  }

  var updateProgress = function(){
      setProgress(wavesurfer.getCurrentTime());
  }

  // Progress slider
  $('.pprogress .slider').slider({step: 0.1, slide: function(event, ui){
      $(this).addClass('enable');
      setProgress(wavesurfer.getDuration() * ui.value / 100);
      clearInterval(timeout);
      play();
  }, stop: function(event, ui){
      wavesurfer.currentTime = wavesurfer.getDuration() * ui.value / 100;
      $(this).removeClass('enable');
      timeout = setInterval(updateProgress, 500);
  }});


  var volume = localStorage.volume || 0.5;



  // Switch track
  var switchTrack = function(i){
      if (i < 0){
          track = currentTrack = playlist.length - 1;
      } else if (i >= playlist.length){
          track = currentTrack = 0;
      } else {
          track = i;
      }

      $('audio').remove();
      loadMusic(track);
      if (isPlaying == true) play();
  }

  // Fire when track ended
  var ended = function(){
    if(debug)console.log("播放结束，ended called");
      pause();
      // audio.currentTime = 0;
      wavesurfer.stop();
      playCounts++;
      if (continous == true) isPlaying = true;
      if (repeat == 1){
          play();
      } else {
          if (shuffle === 'true'){
              shufflePlay();
          } else {
              if (repeat == 2){
                  switchTrack(++currentTrack);
              } else {
                  if (currentTrack < playlist.length) switchTrack(++currentTrack);
              }
          }
      }
  }

  // Fire when track loaded completely
  var afterLoad = function(){
      if (autoplay == true) play();
      // if (autoplay == true) wavesurfer.play(wavesurfer.getCurrentTime());
      // $('.cover img').rotate();
      if(debug) console.log('afterLoad checked!加载完成，检查自动播放！');
      console.log(autoplay);
  }

  // Load track
  var loadMusic = function(i){
      var item = playlist[i];
      wavesurfer.load(item.mp3);
      if(debug) console.log('播放第'+(i+1)+'首，加载'+item.title+'的wave...');

      $('.details .title').html(item.title);

      wavesurfer.on('finish', ended);
      wavesurfer.on('ready', afterLoad);//canplay
      // https://wavesurfer-js.org/docs/events.html
      // wavesurfer.on('ready', beforeLoad);
  }

  loadMusic(currentTrack);

  $('.play-control button').on('click', function(){
      if(debug)console.log('播放暂停键 click');
      if ($(this).parents('.audio').hasClass('state-playing')){
          $(this).parents('.audio').removeClass('state-playing');
          wavesurfer.playPause();
      } else {
          $(this).parents('.audio').addClass('state-playing');
          wavesurfer.playPause();
      }
  });


  $('#playlist li').each(function(i){
      var _i = i;
      $(this).on('click', function(){
          switchTrack(_i);
      });
  });
})(jQuery);
