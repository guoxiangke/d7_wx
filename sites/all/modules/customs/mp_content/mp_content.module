<?php
/**
 * hook_rescources_info
 */
function mp_content_rescources_info(){
	$rescources[] = array(
    'name' => 'mp_contents',
    'desc' =>	'本站图文资源【美文】',
  );
  $rescources[] = array(
    'name' => 'mp_contents_lianai',
    'desc' => '本站图文资源byterm【炼爱】',
  );
  return $rescources;
}
/**
 * Hook_wxresources
 */
function mp_content_wxresources($resources, $account, $keyword){
  if($keyword !='美文') return;
	$enabled_resources = variable_get('wechat_resources_'.$account->uid, array());
  $resources = &drupal_static(__FUNCTION__);
  if(!isset($resources)){
  	if(isset($enabled_resources['mp_contents']) && $enabled_resources['mp_contents']){  		
        $nodes = dale_get_mp_nodes('article',3);
        $news = array();
        foreach ($nodes as $key => $node) {          
          $img = array(
              'Title'=> $node->title,
              'Description'=> $node->title,
              'PicUrl'=>'http://www.yongbuzhixi.com/sites/all/themes/love/family_1.png',
              'Url'=> url('node/'.$node->nid, array('absolute' => TRUE)),
            );
          $news[] = $img;
        }
		  	// if(in_array($keyword, array_keys($get_ybzx_resources)))
		  		$resources['key_'.$keyword]= array(
					'type'	=>	'news',
					'obj'		=>  $news,
					);
  	}

	}
	return $resources;
}
/**
 * get recently create contents of articles!!!
 * by termID
 * must has pics (已配图)
 * @see node_get_recent
 */
function dale_get_mp_nodes($type = 'article', $number=3, $tid = NULL, $publish = 1) {
  $query = db_select('node', 'n');

  if (!user_access('bypass node access')) {
    // If the user is able to view their own unpublished nodes, allow them to
    // see these in addition to published nodes. Check that they actually have
    // some unpublished nodes to view before adding the condition.
    if (user_access('view own unpublished content') && $own_unpublished = db_query('SELECT nid FROM {node} WHERE uid = :uid AND status = :status', array(':uid' => $GLOBALS['user']->uid, ':status' => NODE_NOT_PUBLISHED))->fetchCol()) {
      $query->condition(db_or()
        ->condition('n.status', $publish)
        ->condition('n.type', $type)
        ->condition('n.nid', $own_unpublished, 'IN')
      );
    }
    else {
      // If not, restrict the query to published nodes.
      $query->condition('n.status', $publish);
    }
  }
  $query->condition(db_or()
    ->condition('n.type', $type)
  );
  $nids = $query
    ->fields('n', array('nid'))
    ->orderBy('n.changed', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute()
    ->fetchCol();

  $nodes = node_load_multiple($nids);

  return $nodes ? $nodes : array();
}