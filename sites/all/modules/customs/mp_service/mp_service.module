<?php
/**
 * Implements hook_menu().
 */
function mp_service_menu() {
  $items['mp_services'] = array(
    'title' => '一键接入',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mp_service_settings_form'),
    'access arguments' => array('use mp service'),
    'file' => 'mp_service.admin.inc',
    'menu_name' => 'main-menu',
  );
  $items['mp_service/%user'] = array(
    'page callback' => 'mp_service_callback',
    'page arguments' => array(1),
    'access arguments' => array('access content'),//TODO
    'file' => 'mp_service_pages.inc',
    'type' => MENU_CALLBACK,
  );
  /* login with wechat */
  $items['wechat_auth/%user'] = array(
    'title' => 'Wechat Auth',
    'page callback' => 'wechat_auth',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'mp_service_pages.inc',
  );

  $items['CustomService/%'] = array(
    'title' => '在线客服',
    'page callback' => '_customServiceOnline',
    'page arguments' => array(1),
    'access callback' => '_user_has_role',
    'access arguments' => array(array('公众平台运营者','administrator')),
    'type' => MENU_CALLBACK,
  );
  $items['CustomService/%/%/%/%/close'] = array(
    'title' => '终止在线客服',
    'page callback' => '_customServiceOnlineclose',
    'page arguments' => array(1,2,3,4),
    'access callback' => '_user_has_role',
    'access arguments' => array(array('公众平台运营者','administrator')),
    'type' => MENU_CALLBACK,
  );
  $items['wechat_login/%user'] = array(
    'title' => '微信授权登陆',
    'page callback' => 'wechat_login',
    'access arguments' => array('access content'),
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  $items['wechat_auth/error'] = array(
    'title' => 'Wechat Auth',
    'page callback' => 'mp_plus_auth_error',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  // $items['user/%user/wechat'] = array(
  //   'title' => '微信绑定',
  //   'page callback' => 'drupal_get_form',
  //   'page arguments' => array('mp_service_bind_form'),
  //   'access callback' => 'user_is_logged_in',
  //   'file' => 'mp_service.admin.inc',
  //   'type' => MENU_LOCAL_TASK,
  // );
  $items['user/wechatlogin'] = array(
    'title' => '微信登陆',
    'page callback' => '_wechat_sso_login',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/wechatsso'] = array(
    'title' => '微信绑定sso',
    'page callback' => '_wechat_sso',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['mp_service/comments'] = array(
    'page callback' => 'mp_service_comments',
    'access arguments' => array('access content'),//TODO
    'type' => MENU_CALLBACK,
  );
  return $items;
}
function _customServiceOnlineclose($uid,$openid,$acc1,$acc2){
  $account = new stdClass();
  $account->uid = $uid;
  $weObj  = _mp_service_init_wechat($account);
  $kf_account = $acc1.'@'.$acc2;//kf2003@liangyouzhiyin
  $return = $weObj->closeKFSession($openid,$kf_account,$text='ah');
  if($return['errcode']==0 && $return['errmsg']=='ok'){
    drupal_set_message('成功终止！该用户可以回复获取音频了！', 'status', FALSE);
  }
  drupal_goto('CustomService/'.$uid);
}
function _customServiceOnline($uid){
  $account = new stdClass();
  $account->uid = $uid;
  $weObj  = _mp_service_init_wechat($account);

  $header = array('用户', '客服昵称', '操作' );
  $rows = array();
  // $no_yes = array('No', 'Yes');

  $allKF = $weObj->getCustomServiceKFlist();
  // dpm($allKF['kf_list']);
  foreach ($allKF['kf_list'] as $key => $value) {
    $allkflist[$value['kf_account']] = $value;
  }//TODO 缓存所有客服！
  $OnlineKFlist = $weObj ->getCustomServiceOnlineKFlist();
  // dpm($OnlineKFlist);
  if(isset($OnlineKFlist['kf_online_list'][0]))
  foreach ($OnlineKFlist['kf_online_list'] as $KF) {
    $sessionlist = $weObj ->getKFSessionlist($KF['kf_account']);
    // dpm($sessionlist);
    if(isset($sessionlist['sessionlist'][0]))
    foreach ($sessionlist['sessionlist'] as  $session) {
      $user_info = $weObj->getUserInfo($session['openid']);
      $acc_info = explode('@', $KF['kf_account']) ;
      $rows[] = array('<img src="'.$user_info['headimgurl'].'" style="max-width:20px;">'.$user_info['nickname'],$allkflist[$KF['kf_account']]['kf_nick'],l('终止会话','CustomService/'.$uid.'/'.$session['openid'].'/'.$acc_info[0].'/'.$acc_info[1].'/close'));
    }
  }
  $kfwait = $weObj ->getKFSessionWait();
  if($kfwait['count'])
  foreach ($kfwait['waitcaselist'] as $value) {
      $user_info = $weObj->getUserInfo($value['openid']);
      $rows[] = array('<img src="'.$user_info['headimgurl'].'" style="max-width:20px;">'.$user_info['nickname'],'暂无接入','接入会话');
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}
function _wechat_sso_login(){
  drupal_goto('http://www.yongbuzhixi.com/wechat_login/1?sso=wx');
}
function  _wechat_sso(){
  if(isset($_GET['openid'])){
    $openid = $_GET['openid'];
    $mail = $openid.'@wechat.bind';
    $account = user_load_by_mail($mail);
    if(!$account){
      $mp_account = new stdClass();
      $mp_account->uid = 8;
      $weObj = _mp_service_init_wechat($mp_account);
      $user_info = $weObj->getUserInfo($openid);
      if(!$user_info['subscribe']){
        drupal_goto('http://mp.weixin.qq.com/s?__biz=MzAwNjI4MDAxNA==&mid=211280048&idx=1&sn=9ee78d9f6246ddeb40e69a33a92b0e3f#rd');
        // return '<a href="http://mp.weixin.qq.com/s?__biz=MzAwNjI4MDAxNA==&mid=211280048&idx=1&sn=9ee78d9f6246ddeb40e69a33a92b0e3f#rd">请您先关注服务号：永不止息，才可以登陆。</a>';
      }
      $ori_user_name = mp_strip_utf8mb4_for_text_fields($user_info['nickname'],'?');
      $user_name = $ori_user_name;
      $user_info['nickname'] = $ori_user_name;

      $count = 0;
      while(user_load_by_name($user_name)){
        // $user_name = $user_name.rand(0, 100);
        $user_name = $ori_user_name.'_'.$count;
        $count ++;
      }
      $pass = $user_info['openid'];
      $new_user = array(
        'name' => $user_name,
        'pass' => user_password(),
        'mail' => $mail,
        'init' => $mail,
        // 'picture'=> $file->fid,
        'status' => 1,
        'data'  => $user_info,
        'roles' => array(
          DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        ),
        'field_user_sex' => array(LANGUAGE_NONE => array(array('value' => ($user_info['sex'])%2))),
        // 'field_recommend' => array(LANGUAGE_NONE => array(array('target_id' => $uid))),

      );
      $account = user_save(null, $new_user);
      if(!$account){
        watchdog('mp_service_sso', '账户创建失败！', array(), WATCHDOG_NOTICE, 'error');
      }
      watchdog('ssouser', 'New user: %name .', array('%name' => $user_name), WATCHDOG_NOTICE, l(t('edit'), 'user/' . $account->uid . '/edit'));
    }
    _wechat_user_login($account->uid);
    drupal_set_message('WX登陆成功，欢迎您！', 'status', FALSE);
    drupal_goto('<front>');
  }else{
    _wechat_sso_login();
    // return 'FALSE';//登陆失败!
  }
}
/**
 * Implements hook_permission().
 */
function mp_service_permission() {
  return array(
    'use mp service' =>  array(
      'title' => t('Wechat plus configuration'),
      'description' => t('Wechat plus configuration'),
    ),
  );
}


/**
 * init wechat object
 */
function _mp_service_init_wechat($account){
  $weObj = &drupal_static(__FUNCTION__);
  if(!isset($weObj)){
    // module_load_include('php', 'mp_service', 'wechat.class');
    require_once('wechat.class.php');
    $options = array(
      'token' => variable_get('mp_config_token_'.$account->uid, ""),
      'encodingaeskey'=>variable_get('mp_config_appaes_'.$account->uid, ""),
      'appid' => variable_get('mp_config_appid_'.$account->uid, ""),
      'appsecret' => variable_get('mp_config_appsecret_'.$account->uid, ""),
    );
    $weObj = new Wechat($options);
  }
  return $weObj;
}

/**
 *
 * //get keyword
 * //return resources[keyword]
 * //switch (type) news
 */

function mp_service_keyword_response(&$weObj,$keyword,$account) {
  if(strpos($keyword,'收到不支持的消息类型') !== false){
    $weObj->text("不支持的消息类型,请输入文字或节目代号！")->reply();
    return;
  }
  if(strpos($keyword,'[cp]') !== false){
    $weObj->text("不支持的复制消息发送,请重新输入！")->reply();
    return;
  }
  $wxresources = module_invoke_all('wxresources', array(), $account, $keyword, $weObj);
	$ori_keyword = $keyword;

	$keyword = 'key_'.$keyword;//1001 => 0 selution.
  //for lywx 台庆 to delete!
  if(isset($wxresources['key_tq'])){
    $weObj->news($wxresources['key_tq']['obj']);
    return;
  }
  //for lywx 台庆 to delete end!!
  // watchdog('keyword', $keyword, array(), WATCHDOG_NOTICE, 'link');
  // watchdog('ori_keyword', $ori_keyword, array(), WATCHDOG_NOTICE, 'link');
  // watchdog('mp_service', '<pre>'.print_r($wxresources,TRUE), array(), WATCHDOG_NOTICE, 'link');
  if(isset($wxresources[$keyword])){
    if(!isset($wxresources[$keyword]['type'])){
      if(isset($wxresources[$keyword]['obj']['text']))
        $weObj->text($wxresources[$keyword]['obj']['text']);
      watchdog('ori_keyword', $ori_keyword, array(), WATCHDOG_NOTICE, 'error');
      return;
    }
    switch ($wxresources[$keyword]['type']) {
      case 'music':
        if(isset($wxresources[$keyword]['path'])){
          $etime = time()+86400;
          $sign = substr(md5('ly729'.'&'.$etime.'&'.$wxresources[$keyword]['path']), 12,8).$etime;
          $wxresources[$keyword]['obj']['musicurl'] .= '?_upt='.$sign;
          $wxresources[$keyword]['obj']['hgmusicurl'] = $wxresources[$keyword]['obj']['musicurl'];
        }
        if(!isset($wxresources[$keyword]['obj']['hgmusicurl']))
          $wxresources[$keyword]['obj']['hgmusicurl'] = $wxresources[$keyword]['obj']['musicurl'];
        $title = $wxresources[$keyword]['obj']['title'];
        if(strpos($wxresources[$keyword]['obj']['title'], '【')===FALSE){
          $title = '【'.$ori_keyword.'】'.$wxresources[$keyword]['obj']['title'];
        }
        $weObj->music($title, $wxresources[$keyword]['obj']['desc'], $wxresources[$keyword]['obj']['musicurl'], $wxresources[$keyword]['obj']['hgmusicurl']);
        if(variable_get('mp_config_certified_'.$account->uid, false) && isset($wxresources[$keyword]['custommessage'])){
          $did_you_know = variable_get('wechat_add_message_'.$account->uid, "");
          $did_you_know = explode("\n",$did_you_know);
          if($account->uid==12){//节目为啥变灰色了呢，是小永的病毒[TearingUp],小永可不会这高科技[Cry]，是微信最新版本功能的哦！[Twirl]
            $added = '';
            $add_more = $did_you_know[array_rand($did_you_know)];
            $added .= "\n------------------------------\n您知道吗[疑问]".$add_more."[嘘]";
            $data = array(
              "touser"=>$weObj->getRev()->getRevFrom(),
              "msgtype"=>'text',
              'text'=>array('content'=>$wxresources[$keyword]['custommessage'].$added),
            );
            $weObj->sendCustomMessage($data);
          }
        }
        //TOdelete after 729 begin.
        if(variable_get('mp_config_certified_'.$account->uid, false) && isset($wxresources[$keyword]['custommessages'])){
          // $touser = $weObj->getRev()->getRevFrom();
          if(time()>strtotime('2016-06-28 23:59:59') && time()<strtotime('2016-07-28 23:59:59')){
            $data = array(
              "touser"=>$weObj->getRev()->getRevFrom(),
              "msgtype"=>'text',
              'text'=>array('content'=>$wxresources[$keyword]['custommessages']),
            );
            $weObj->sendCustomMessage($data);
          }
        }
        //TOdelete after 729 begin. end.
        break;
      case 'text':
        $weObj->text($wxresources[$keyword]['obj']['text']);
        break;
      case 'news':
        $new = $wxresources[$keyword]['obj'];
        $weObj->news($new);
        break;
    }
    if(isset($wxresources[$keyword]['gadata'])){
      gapushagent('event',$wxresources[$keyword]['gadata']);
    }else{
      gapushagent('event',array(
         'category'        => $wxresources[$keyword]['type'],
         'action'          => isset($wxresources[$keyword]['gakey'])?$wxresources[$keyword]['gakey']:$ori_keyword,
         'label'           => 'wxservice_'.$account->uid,
       ));
    }
    return;
  }
  //TODO need delete ??? menuGet....
  $special_keywords = array('?','1','0');
  if(in_array($ori_keyword, $special_keywords)){
    $copyright = copyright($account);
    $weObj->text($copyright);
    if($account->uid>1) gapushagent('event',array(
     'category'        => 'resourceGet',
     'action'          => $ori_keyword,
     'label'           => 'wxservice_'.$account->uid,
    ));
    return;
  }
  if($ori_keyword=='http://www.yongbuzhixi.com?from=wx'){
    return;
  }
  //long keywords
  // watchdog('strlen1', $len, array(), WATCHDOG_NOTICE, 'link');
  if (variable_get('mp_config_certified_'.$account->uid, false)) { // 且已认证
    $len = strlen($ori_keyword);
    // 9-15 =＝ 节目
    //彩虹桥 ＝ 9
    //真理之光 ＝ 12
    //长夜的牵引 ＝ 15
    //婚姻的意义留言内容==27


    // /////字数太少，我们为你转人工服务吧！感谢主 阿门 谢谢 我是
    // // 您好 你好 请   今天 + 几点 + 播?  播出 哪里 哪个  有+吗  我想 我也 想听 怎么
    // if ($account->uid != 12)
    // if (strpos($ori_keyword,'您好') !== false||
    //     strpos($ori_keyword,'你好') !== false||
    //     strpos($ori_keyword,'请') !== false||
    //     strpos($ori_keyword,'播') !== false||
    //     strpos($ori_keyword,'哪里') !== false||
    //     strpos($ori_keyword,'哪个') !== false||
    //     strpos($ori_keyword,'我') !== false||
    //     strpos($ori_keyword,'想') !== false||
    //     strpos($ori_keyword,'么') !== false||
    //     strpos($ori_keyword,'吗') !== false||
    //     strpos($ori_keyword,'几') !== false
    //   ){
    //   $weObj->transfer_customer_service()->reply();
    //   if($account->uid>1)
    //   gapushagent('event',array(
    //    'category'        => 'wxservice',
    //    'action'          => '转接客服',
    //    'label'           => 'wxservice_'.$account->uid,
    //    'value'           => $ori_keyword,
    //   ));
    //   return ;
    // }
    // // if($len > 15 && $len <= 30){
    // //   if($account->uid>1) gapushagent('event',array(
    // //    'category'        => 'wxservice',
    // //    'action'          => 'customerservice',
    // //    'label'           => $ori_keyword,
    // //   ));
    // //   $weObj->transfer_customer_service()->reply();
    // // }else
    if($len > 30 && $account->uid !=1417)
    {
      $nid = 113;
      $node_type = 'wxcomments';
      //POST($user_info,$ori_keyword);
      $id = $weObj->getRevID();
      // watchdog('id?', $id, array(), WATCHDOG_NOTICE, 'link');
      // if(variable_get('mp_config_wxcomments_before', '0') == $id) {
      //   watchdog('prevent twice post by wechat servuce!', 'message', array(), WATCHDOG_NOTICE, 'link');
      //   return;
      // }
      $openid = $weObj->getRev()->getRevFrom();
      $user_info = $weObj->getUserInfo($openid);

      $comment_body = $ori_keyword;
      //微信回复【内容@106】 即可留言！
      // $comment_body = '@113.我没有单身的恩赐.等了很多年另一半还没出现.我问神.神一直没回应我. ';
      // $str = explode('@',$comment_body);
      // $count = count($str);
      // if($count && is_numeric($str[$count-1])){
      //   if(node_load($str[$count-1])){
      //     $nid = $str[$count-1];
      //     $comment_body = $str[0];
      //   }
      //   watchdog('1', $nid , array(), WATCHDOG_NOTICE, 'link');
      // }

      preg_match('/@\d{3}/', $ori_keyword,$m);//$m[0]=@113
      if(isset($m[0])){
        $nid = str_replace('@', '', $m[0]);
        $comment_body =  str_replace($m[0], '', $comment_body);
      }

      if (strpos($ori_keyword,'周师母') !== false|| strpos($ori_keyword,'周素琴') !== false || strpos($ori_keyword,'空中辅导') !== false) {
        $nid = 163;
        $comment_body = $ori_keyword;
      }
      //空中辅导直播留言板开放时间：周2-3-4 晚上6点-9点 [微笑]敬请留意！字数>10<60字的内容会到发送到直播间大屏幕！

      if(0&&$nid == 163 && $len > 29 && $len <= 200 &&  in_array(date('N'), array(2,3,4)) && date('G')>=6 &&date('G')>=9 ){//cc空中辅导大屏幕！10-30字
        // watchdog('dpm', 'message', array(), WATCHDOG_NOTICE, 'link');
        $openid = $weObj->getRev()->getRevFrom();
        $user_info = $weObj->getUserInfo($openid);
        $data = array();
        $data['headimgurl'] = $user_info['headimgurl'].'.png';
        $data['province'] = $user_info['province'].' '.$user_info['city'];
        $data['nickname'] = mp_strip_utf8mb4_for_text_fields($user_info['nickname'],'?');
        $data['openid'] = $openid;
        $data['content'] = $ori_keyword;
        $data['time'] = $weObj->getRevCtime(); //1444450304
        // $id = $weObj->getRevID();//6203866816598959257
        $re = firebaseset('wechat/'.$id,$data);
        // watchdog('firebaseset', $data['nickname'].$keyword, array(), WATCHDOG_NOTICE, 'link');
        //firebaseset end!
        if($account->uid>1) gapushagent('event',array(
         'category'        => 'firebaseset',
         'action'          => $ori_keyword,
         'label'           => 'wxservice_'.$account->uid,
        ));
        $weObj->text("互动留言已发布到大屏幕！\n周师母直播时会选读的哦！")->reply();
        return;
      }
      //其他时间段会到留言板！
      $pid = 0;
      $str = explode('?',$comment_body);
      if(isset($str[0]))
        $comment_body = $str[0];
      if(isset($str[1])){
        $str2 = explode('#',$str[1]);
        if(isset($str2[0])){
          if(node_load($str2[0]))
            $nid = $str2[0];
        }
        if(isset($str2[1]))
          $pid = $str2[1];
      }
      $url = url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q=').'node/'.$nid;
      $weObj->text("评论留言成功！\n审核后会<a href='".$url."'>出现在这里哦</a>！")->reply();
      $before = variable_get('mp_config_wxcomments_wxid', '0');
      // watchdog('before', $before, array(), WATCHDOG_NOTICE, 'link');
      // watchdog('id', $id, array(), WATCHDOG_NOTICE, 'link');
      if($before!=$id){
        variable_set('mp_config_wxcomments_wxid', $id);
        _post_wxcomments($user_info,$comment_body,$nid,$id,$pid);
        if($account->uid>1) gapushagent('event',array(
         'category'        => 'comments',
         'action'          => $ori_keyword,
         'label'           => 'wxservice_'.$account->uid,
        ));
      }
    }
  }
}

function copyright($account){
    // Gather information from hook_libraries_info() in enabled modules.
    foreach (module_implements('rescources_info') as $module) {
      foreach (module_invoke($module, 'rescources_info') as $machine_name => $properties) {
        $options[$properties['name']] = $properties['desc'];
      }
    }
    $enabled_resources = variable_get('wechat_resources_'.$account->uid, array());
    $res ='';
    foreach ($options as $key => $value) {
     if(isset($enabled_resources[$key]) && $enabled_resources[$key])
      $res .= $value."\n";
    }
    if($account->uid==973) $res='';//小永好，当一个新用户关注我们公众号的时候，除了出现我在公众云设置的“您好，谢谢关注！输入任意文字即看到首页。”之外，还有【FM】的信息，是否可以把【FM】的信息去掉？
    $foot = variable_get('wechat_foot_message_'.$account->uid, "回复【】内容给我试试吧[调皮]");
    $copy = variable_get('wechat_copy_message_'.$account->uid, "本资源有主内公众云提供") ;
    $res .= $foot;
    if(!$copy) return $res;
    return "$copy"."\n".$res;
}



/**
 * Implements hook_user_insert().
 */
function mp_service_user_insert(&$edit, $account, $category) {
  // [5] => 公众平台运营者
  if(in_array('5', array_keys($edit['roles']))){
    $term = new stdClass();
    $term->name = $account->field_user_name[LANGUAGE_NONE][0]['value'];
    $term->vid = 3;
    taxonomy_term_save($term);
    variable_set('mp_config_appmenuid_'.$account->uid, $term->tid);
  }
}


/**
 * user login by uid
 */
function _wechat_user_login($uid){
  global $user;
  $user = user_load($uid);
  drupal_session_regenerate();
}

function mp_plus_auth_error(){
  drupal_set_message('错误代码：1436005736 微信服务认证出错！', 'error', FALSE);
  drupal_goto('<front>');
}

function wechat_login($mp_account){
  global $user;
  if(user_is_logged_in()){
    // return 'you have login '.$user->name;
  }
  $path = url('wechat_auth/'.$mp_account->uid, array('absolute'=>true));
  $onerror = url('wechat_auth/error', array('absolute'=>true));

  // $mp_uid = 8;
  // $mp_account = user_load($mp_uid);
  $weObj = _mp_service_init_wechat($mp_account);
  $auth_url = $weObj->getOauthRedirect(url('wechat_auth/'.$mp_account->uid, array('absolute'=>TRUE, 'query'=>array('destination'=>$path, 'onerror'=>$onerror))), 2, 'snsapi_userinfo');
  drupal_goto($auth_url);
}


/**
 * load user by wechat openid
 */
function wechat_token_get_user($openid){
  $result = db_query("SELECT * FROM {users} WHERE init=:init", array(':init'=>$openid.'@wechat.bind'));
  if(!$result){
    return false;
  }
  $authmap = $result->fetchAssoc();
  if(!empty($authmap['uid'])){
    return user_load($authmap['uid']);
  }
  return false;
}

function firebaseset($path,$value){//
  require_once('firebase/src/firebaseInterface.php');
  require_once('firebase/src/firebaseLib.php');
  $DEFAULT_URL = 'https://kzfd.firebaseio.com/';
  $DEFAULT_TOKEN = 'rv9cjRdivU06ieEHctk1Jln8wqHU04WWjL4MwJPt';
  $DEFAULT_PATH = '/firebase/example';
  $firebase = new \Firebase\FirebaseLib($DEFAULT_URL, $DEFAULT_TOKEN);

  // --- storing an array ---
  // $test = array(
  //     "nick_name" => "love_ybzx",
  //     "content" => "lamp test!",
  // );
  // // -- Firebase API commands

  // $firebase->set($path, $value);   // stores data in Firebase
  // $value = $firebase->get($path);  // reads a value from Firebase
  // $firebase->delete($path);        // deletes value from Firebase
  // $firebase->update($path, $data); // updates data in Firebase
  // $firebase->push($path, $data);   // push data to Firebase

  // // -- Firebase PHP Library commands

  // $firebase->setToken($token);     // set up Firebase token
  // $firebase->setBaseURI($uri);     // set up Firebase base URI (root node)
  // $firebase->setTimeOut($seconds); // set up maximum timeout / request

// dpm($firebase->delete('wechat'));
  $return = $firebase->set($path,$value);
  return $return;
  // $dateTime = new DateTime();

  // $firebase->set($DEFAULT_PATH . '/' . $dateTime->format('c'), $test);

  // --- storing a string ---
  // $firebase->set($DEFAULT_PATH . '/name/contact001', "John Doe");

  // --- reading the stored string ---
  // $name = $firebase->get($DEFAULT_PATH . '/name/contact001');
  //
}

function _post_wxcomments($user_info,$keyword,$nid,$id,$pid){
  // watchdog('user_info', '<pre>'.print_r($user_info,1), array(), WATCHDOG_NOTICE, 'link');
  // watchdog('keyword', $keyword, array(), WATCHDOG_NOTICE, 'link');
  // watchdog('nid', $nid, array(), WATCHDOG_NOTICE, 'link');
  // watchdog('pid', $pid, array(), WATCHDOG_NOTICE, 'link');
  // watchdog('getRevID', $id, array(), WATCHDOG_NOTICE, 'link');

  //set POST variables
  $url = url('mp_service/comments',array('absolute'=>TRUE));
  //$url = http://wx.yongbuzhixi.com/mp_service/comments
  $fields = array(
    'user_info' => urlencode(json_encode($user_info)),
    'content' => urlencode($keyword),
    'nid' => urlencode($nid),
    'id' => urlencode($id),
    'pid' => urlencode($pid)
  );
  //url-ify the data for the POST
  $fields_string = '';
  foreach($fields as $key=>$value) { $fields_string .= $key.'='.$value.'&'; }
  rtrim($fields_string, '&');
  //open connection
  $ch = curl_init();
  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $url);
  curl_setopt($ch,CURLOPT_POST, count($fields));
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  //execute post
  $result = curl_exec($ch);
  //close connection
  curl_close($ch);
}


function mp_service_comments() {
  // $nid = 113;
  // $node_type = 'wxcomments';
  //POST($user_info,$ori_keyword);
  $nid = $_POST['nid'];
  $id = $_POST['id'];
  $pid = $_POST['pid'];
  $user_info = (array)json_decode($_POST['user_info']);

  $comment_body = $_POST['content'];

  $mail = $user_info['openid'].'@wechat.bind';
  $account = user_load_by_mail($mail);
  if(!$account){
    // watchdog('create user '.$mail, 'message', array(), WATCHDOG_NOTICE, 'link');
    // create $user;
    // $response = drupal_http_request($user_info['headimgurl']);
    // if ($response->code == 200){
    //   $file = file_save_data($response->data, 'public://users/'. $user_info['openid'].'.jpg');
    // }
    $ori_user_name = mp_strip_utf8mb4_for_text_fields($user_info['nickname'],'?');
    $user_name = $ori_user_name;
    $user_info['nickname'] = $ori_user_name;
    $count = 0;
    while(user_load_by_name($user_name)){
      // $user_name = $user_name.rand(0, 100);
      $user_name = $ori_user_name.'_'.$count;
      $count ++;
    }
    $pass = date('Ymd');
    $new_user = array(
      'name' => $user_name,
      'pass' => $pass,//user_password()
      'mail' => $mail,
      'init' => $mail,
      // 'picture'=> $file->fid,
      'status' => 1,
      'data'  => $user_info,
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      ),
      // 'field_sex' => 1,2男 ＝》 0 男 1 女
      'field_user_sex' => array(LANGUAGE_NONE => array(array('value' => ($user_info['sex'])%2))),
    );
    $account = user_save(null, $new_user);
    if(!$account){
      // drupal_set_message('账户创建失败！', 'error', FALSE);
      watchdog('mp_service_pages', '账户创建失败！', array(), WATCHDOG_NOTICE, 'error');
    }
    // drupal_set_message('恭喜您成功注册！', 'status', FALSE);
  }
  // check comment ID
  {


    // dpm($nid,'nid');
    // dpm($pid,'pid');
    // dpm($comment_body,'comment_body');
    $comment = new stdClass();
    $comment->nid = $nid; // nid of a node you want to attach a comment to
    $comment->cid = 0; // leave it as is
    $comment->pid = $pid; // parent comment id, 0 if none
    $comment->uid = $account->uid; // user's id, who left the comment

    $comment->mail = $mail;//
    // $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
    $comment->name = $account->name;//; // If user is authenticated you can omit this field, it will be auto-populated, if the user is anonymous and you want to name him somehow, input his name here
    // $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
    $comment->hostname = $_SERVER['REMOTE_ADDR'] ;// OPTIONAL. You can log poster's ip here
    $comment->created = time(); // OPTIONAL. You can set any time you want here. Useful for backdated comments creation.
    $comment->is_anonymous = 0; // leave it as is
    $comment->homepage = ''; // you can add homepage URL here

    $status = COMMENT_PUBLISHED;
    if($nid == '163') $status = COMMENT_NOT_PUBLISHED;//for 空中辅导，需要审核！
    if($nid == '2089') $status = COMMENT_NOT_PUBLISHED;//for lywx 台庆
    if($pid != 0) $status = COMMENT_PUBLISHED;
    $comment->status = $status;//COMMENT_PUBLISHED; // We auto-publish this comment
    $comment->language = LANGUAGE_NONE; // The same as for a node
    // $keyword = substr($keyword, 2);
    $subject = truncate_utf8($comment_body, 15, $wordsafe = FALSE, $add_ellipsis = FALSE, $min_wordsafe_length = 1);
    $comment->subject = $subject;

    // $comment->signature = '';//$wechat_user_info['contact_info']['signature'] ;

    // $comment->signature_format = 'filtered_html';
    $comment->comment_body[$comment->language][0]['value'] = $comment_body; // Everything here is pretty much like with a node
    $comment->comment_body[$comment->language][0]['format'] = 'filtered_html';
    // $comment->field_custom_field_name[LANGUAGE_NONE][0]['value'] = 'Some value'; // OPTIONAL. If your comment has a custom field attached it can added as simple as this // preparing a comment for a save
     // saving a comment
    ///////////end
    if($comment = comment_submit($comment)) { // Prepare node for saving
      comment_save($comment);
        // return $comment;
    }

  }
}
//no post function callback!!! directly call no menu call!
function mp_service_wechat_comment($weObj,$comment_body,$nid = 113,$pid = 0){
      //@see function mp_service_comments()
      $id = $weObj->getRevID();
      $openid = $weObj->getRev()->getRevFrom();
      $user_info = $weObj->getUserInfo($openid);
      $user_info = (array)$user_info;

      $mail = $user_info['openid'].'@wechat.bind';
      $account = user_load_by_mail($mail);
      if(!$account){
        // watchdog('create user '.$mail, 'message', array(), WATCHDOG_NOTICE, 'link');
        // create $user;
        // $response = drupal_http_request($user_info['headimgurl']);
        // if ($response->code == 200){
        //   $file = file_save_data($response->data, 'public://users/'. $user_info['openid'].'.jpg');
        // }
        $ori_user_name = mp_strip_utf8mb4_for_text_fields($user_info['nickname'],'?');
        $user_name = $ori_user_name;
        $user_info['nickname'] = $ori_user_name;
        $count = 0;
        while(user_load_by_name($user_name)){
          // $user_name = $user_name.rand(0, 100);
          $user_name = $ori_user_name.'_'.$count;
          $count ++;
        }
        $pass = date('Ymd');
        $new_user = array(
          'name' => $user_name,
          'pass' => $pass,//user_password()
          'mail' => $mail,
          'init' => $mail,
          // 'picture'=> $file->fid,
          'status' => 1,
          'data'  => $user_info,
          'roles' => array(
            DRUPAL_AUTHENTICATED_RID => 'authenticated user',
          ),
          // 'field_sex' => 1,2男 ＝》 0 男 1 女
          'field_user_sex' => array(LANGUAGE_NONE => array(array('value' => ($user_info['sex'])%2))),
        );
        $account = user_save(null, $new_user);
        if(!$account){
          // drupal_set_message('账户创建失败！', 'error', FALSE);
          watchdog('mp_lywx', '账户创建失败！', array(), WATCHDOG_NOTICE, 'error');
        }
        // drupal_set_message('恭喜您成功注册！', 'status', FALSE);
      }
      // check comment ID
      {
        // dpm($nid,'nid');
        // dpm($pid,'pid');
        // dpm($comment_body,'comment_body');
        $comment = new stdClass();
        $comment->nid = $nid; // nid of a node you want to attach a comment to
        $comment->cid = 0; // leave it as is
        $comment->pid = $pid; // parent comment id, 0 if none
        $comment->uid = $account->uid; // user's id, who left the comment

        $comment->mail = $mail;//
        // $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
        $comment->name = $account->name;//; // If user is authenticated you can omit this field, it will be auto-populated, if the user is anonymous and you want to name him somehow, input his name here
        // $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
        $comment->hostname = $_SERVER['REMOTE_ADDR'] ;// OPTIONAL. You can log poster's ip here
        $comment->created = time(); // OPTIONAL. You can set any time you want here. Useful for backdated comments creation.
        $comment->is_anonymous = 0; // leave it as is
        $comment->homepage = ''; // you can add homepage URL here

        $status = COMMENT_NOT_PUBLISHED;
        if($pid != 0) $status = COMMENT_PUBLISHED;
        $comment->status = $status;//COMMENT_PUBLISHED; // We auto-publish this comment
        $comment->language = LANGUAGE_NONE; // The same as for a node
        // $keyword = substr($keyword, 2);
        $subject = truncate_utf8($comment_body, 15, $wordsafe = FALSE, $add_ellipsis = FALSE, $min_wordsafe_length = 1);
        $comment->subject = $subject;

        // $comment->signature = '';//$wechat_user_info['contact_info']['signature'] ;

        // $comment->signature_format = 'filtered_html';
        $comment->comment_body[$comment->language][0]['value'] = $comment_body; // Everything here is pretty much like with a node
        $comment->comment_body[$comment->language][0]['format'] = 'filtered_html';
        // $comment->field_custom_field_name[LANGUAGE_NONE][0]['value'] = 'Some value'; // OPTIONAL. If your comment has a custom field attached it can added as simple as this // preparing a comment for a save
         // saving a comment
        ///////////end
        if($comment = comment_submit($comment)) { // Prepare node for saving
          comment_save($comment);
            // return $comment;
        }
      }
    //end function mp_service_comments()
}
/**
 *  Retern the processed text which the none utf8 characters has been replaced.
 * @url https://www.drupal.org/project/strip_utf8mb4
 * @param string $text_data
 * @param string $replace_text
 *
 * @return string
 */
function mp_strip_utf8mb4_for_text_fields($text_data, $replace_text ='') {
  $replacements_done = array();
  // Strip overly long 2 byte sequences, as well as characters
  //  above U+10000 and replace with $replace_text
  $processed_text_data = preg_replace('/[\x00-\x08\x10\x0B\x0C\x0E-\x19\x7F]' .
    '|[\x00-\x7F][\x80-\xBF]+' .
    '|([\xC0\xC1]|[\xF0-\xFF])[\x80-\xBF]*' .
    '|[\xC2-\xDF]((?![\x80-\xBF])|[\x80-\xBF]{2,})' .
    '|[\xE0-\xEF](([\x80-\xBF](?![\x80-\xBF]))|(?![\x80-\xBF]{2})|[\x80-\xBF]{3,})/S',
    $replace_text, $text_data, -1, $replacements_done[]);

  // Strip overly long 3 byte sequences and UTF-16 surrogates and replace with $replace_text
  $processed_text_data = preg_replace('/\xE0[\x80-\x9F][\x80-\xBF]' .
                                          '|\xED[\xA0-\xBF][\x80-\xBF]/S', $replace_text, $processed_text_data, -1, $replacements_done[]);

  if (array_sum($replacements_done) > 0) {
    $message = t('Unsupported characters in your text were replaced with "!replacement"', array('!replacement' => $replace_text));
    drupal_set_message($message, 'warning', FALSE);
  }

  return $processed_text_data;
}
